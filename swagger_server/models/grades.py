# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Grades(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, class_id: str=None, student_id: str=None, name: str=None, grades: List[Dict[str, str]]=None):  # noqa: E501
        """Grades - a model defined in Swagger

        :param class_id: The class_id of this Grades.  # noqa: E501
        :type class_id: str
        :param student_id: The student_id of this Grades.  # noqa: E501
        :type student_id: str
        :param name: The name of this Grades.  # noqa: E501
        :type name: str
        :param grades: The grades of this Grades.  # noqa: E501
        :type grades: List[Dict[str, str]]
        """
        self.swagger_types = {
            'class_id': str,
            'student_id': str,
            'name': str,
            'grades': List[Dict[str, str]]
        }

        self.attribute_map = {
            'class_id': 'classId',
            'student_id': 'studentId',
            'name': 'name',
            'grades': 'grades'
        }
        self._class_id = class_id
        self._student_id = student_id
        self._name = name
        self._grades = grades

    @classmethod
    def from_dict(cls, dikt) -> 'Grades':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Grades of this Grades.  # noqa: E501
        :rtype: Grades
        """
        return util.deserialize_model(dikt, cls)

    @property
    def class_id(self) -> str:
        """Gets the class_id of this Grades.


        :return: The class_id of this Grades.
        :rtype: str
        """
        return self._class_id

    @class_id.setter
    def class_id(self, class_id: str):
        """Sets the class_id of this Grades.


        :param class_id: The class_id of this Grades.
        :type class_id: str
        """

        self._class_id = class_id

    @property
    def student_id(self) -> str:
        """Gets the student_id of this Grades.


        :return: The student_id of this Grades.
        :rtype: str
        """
        return self._student_id

    @student_id.setter
    def student_id(self, student_id: str):
        """Sets the student_id of this Grades.


        :param student_id: The student_id of this Grades.
        :type student_id: str
        """

        self._student_id = student_id

    @property
    def name(self) -> str:
        """Gets the name of this Grades.


        :return: The name of this Grades.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this Grades.


        :param name: The name of this Grades.
        :type name: str
        """

        self._name = name

    @property
    def grades(self) -> List[Dict[str, str]]:
        """Gets the grades of this Grades.


        :return: The grades of this Grades.
        :rtype: List[Dict[str, str]]
        """
        return self._grades

    @grades.setter
    def grades(self, grades: List[Dict[str, str]]):
        """Sets the grades of this Grades.


        :param grades: The grades of this Grades.
        :type grades: List[Dict[str, str]]
        """

        self._grades = grades
